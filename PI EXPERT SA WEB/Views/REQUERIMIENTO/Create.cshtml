@model PI_EXPERT_SA_WEB.Models.REQUERIMIENTO

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@*<script>
            $(document).ready(function () {

                $("#idProyectoPK").change(function () {
                    var proyectoID = $("#idProyectoPK").val();
                    $("#idModuloO").load('/REQUERIMIENTO/DropDownModulo', { idProyectoPK: proyectoID });
                    $("#crearReq").prop("href", '@(Url.Action("Create","REQUERIMIENTOS",null, Request.Url.Scheme))?idProyectoPK=' + proyectoID);
                });
            });
    </script>*@


@*<script>
        $(document).ready(function () {
            $("#idProyectoPK").change(function () {
                getModul();
            });
        });
    </script>*@








<a href="@Url.Action("Index","REQUERIMIENTO", new {})" class="boton-icono" style="float:left">
    <img src="~/images/left-arrow.svg" width="30" height="30" />
</a>
<h2>Crear Requerimiento</h2>
<div class="required-field-asterisk">
    <p>*<span style="color:black">Campos requeridos</span> </p>
</div>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group row offset-3 required">
            @Html.LabelFor(model => model.idProyectoPK, "proyecto", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idProyectoPK", null, "--Seleccionar Proyecto--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idModuloPK, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group row offset-3 required">
            @Html.LabelFor(model => model.idModuloPK, "Módulo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="idModuloO">
                    @Html.DropDownList("idModuloPK", null, "--Seleccionar Módulo--", htmlAttributes: new { @class = "form-control" })
                </div>
                @*@Html.DropDownList("idModuloO", Enumerable.Empty<SelectListItem>(), "--Seleccionar Módulo--", new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.idModuloPK, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group row offset-3 required">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.fechaEstado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaEstado, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaEstado, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group row offset-3 required">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row offset-3">
            @Html.LabelFor(model => model.complejidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.complejidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.complejidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row offset-3">
            @Html.LabelFor(model => model.duracionEstimada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.duracionEstimada, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.duracionEstimada, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.fechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fechaInicio, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group row offset-3">
            @Html.LabelFor(model => model.cedulaDesarrolladorFK, "cedulaDesarrolladorFK", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("cedulaDesarrolladorFK", null, "--Seleccionar Desarrollador--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.cedulaDesarrolladorFK, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col text-center">
            <div class="form-group">
                <div class="col-md-auto" style="margin-top: 50px">
                    <input type="image" src="~/images/success.svg" alt=”submit” name=”submit” width="50" height="50" style="float: unset" />
                </div>
            </div>
        </div>


    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
