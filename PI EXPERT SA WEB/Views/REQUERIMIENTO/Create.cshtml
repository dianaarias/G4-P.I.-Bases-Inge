@model PI_EXPERT_SA_WEB.Models.REQUERIMIENTO

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<<<<<<< HEAD
<<<<<<< HEAD
<a href="@Url.Action("Index","REQUERIMIENTO", new {})" class="boton-icono" style="float:left">
    <img src="~/images/left-arrow.svg" width="30" height="30" />
</a>
<h2>Crear Requerimiento</h2>
<div class="required-field-asterisk">
    <p>*<span style="color:black">Campos requeridos</span> </p>
</div>
=======
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
>>>>>>> master
=======

<script src="~/Scripts/jquery-3.3.1.min.js"></script>
>>>>>>> 41870458fafde7fa5ea1de5c46f51ab9b837a178

@*Boton de atras*@
<a id="atras" href="@Url.Action("Index","REQUERIMIENTO", new {})" class="boton-icono" style="float:left">
    <img src="~/images/left-arrow.svg" width="30" height="30" />
</a>

<<<<<<< HEAD
<<<<<<< HEAD
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group row offset-3 required">
        @Html.LabelFor(model => model.idProyectoPK, "Proyecto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("idProyectoPK", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idProyectoPK, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row offset-3 required">
        @Html.LabelFor(model => model.idModuloPK, "Módulo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("idModuloPK", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.idModuloPK, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row offset-3 required">
        @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row offset-3 required">
        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group row offset-3 required">
        @Html.LabelFor(model => model.fecha, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fecha, new { htmlAttributes = new { @class = "form-control", type= "date" } })
            @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group row offset-3 required">
        @Html.LabelFor(model => model.complejidad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("selection", new List<SelectListItem>() {new SelectListItem { Text = "1-Simple", Value = "1" }, new SelectListItem { Text = "2-Mediano", Value = "2" }, new SelectListItem { Text = "3-Complejo", Value = "3" }, new SelectListItem { Text = "4-Muy Complejo", Value = "4" } }, null, htmlAttributes: new { @class = "form-control" })
            @*@Html.EditorFor(model => model.complejidad, new { htmlAttributes = new { @class = "form-control" } })*@
=======
=======

>>>>>>> 41870458fafde7fa5ea1de5c46f51ab9b837a178
<h2>Crear Requerimiento</h2>

@*Campos requeridos con asterisco*@
<div class="required-field-asterisk">
    <p>*<span style="color:black">Campos requeridos</span> </p>
</div>


@*Lista de elementos para agregar a la tabla de requerimientos*@

@using (Html.BeginForm())
{

@Html.AntiForgeryToken()


<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })




    @*ID del proyecto*@
    <div class="form-group row offset-3">
        @Html.LabelFor(model => model.idProyectoPK, "Proyecto", htmlAttributes: new { @class = "control-label col-md-2" })
        @TempData.Peek("nombreProyecto").ToString()
        @Html.HiddenFor(model => model.idProyectoPK, new { htmlAttributes = 1 })
        @*@Html.EditorFor(model => model.idProyectoPK, new { htmlAttributes = TempData.Peek("proyectoID")})*@
        @Html.ValidationMessageFor(model => model.idProyectoPK, "", new { @class = "text-danger" })
    </div>

    @*ID del módulo*@
    <div class="form-group row offset-3">
        @Html.LabelFor(model => model.idModuloPK, "Módulo", htmlAttributes: new { @class = "control-label col-md-2" })
        @TempData.Peek("nombreModulo").ToString()
        @Html.HiddenFor(model => model.idModuloPK, new { htmlAttributes = 1 })
        @*@Html.EditorFor(model => model.idModuloPK, new { htmlAttributes = TempData.Peek("moduloID") })*@
        @Html.ValidationMessageFor(model => model.idModuloPK, "", new { @class = "text-danger" })
    </div>



    @*Nombre del Requerimiento*@
    <div class="form-group row offset-3 required">
        @Html.LabelFor(model => model.nombre, "Nombre Requerimiento", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>


    @*En la vista de Create no se debe habilitar la opcion de seleccionar estado, ya que este uniciamente puede ser "sin asignar" o "asignado" y de eso se encarga el trigger*@
    @*Estado del requerimiento*@
    @*<div class="form-group row offset-3 required">
        @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.estado, new List<SelectListItem>
            {
                        new SelectListItem() {Text = "--Seleccionar estado--", Value=""},
                        new SelectListItem() {Text = "Sin asignar", Value="Sin asignar"},
                        new SelectListItem() {Text = "Asignado", Value="Asignado"},
            })
            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
        </div>
    </div>*@


    @*Complejidad*@
    <div class="form-group row offset-3">
        @Html.LabelFor(model => model.complejidad, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.complejidad, new List<SelectListItem>
            {
                    new SelectListItem() {Text = "--Seleccionar complejidad--", Value=""},
                    new SelectListItem() {Text = "simple", Value="simple"},
                    new SelectListItem() {Text = "mediano", Value="mediano"},
                    new SelectListItem() {Text = "complejo", Value="complejo"},
                    new SelectListItem() {Text = "muy complejo", Value="muy complejo"}
             })
<<<<<<< HEAD
>>>>>>> master
=======
>>>>>>> 41870458fafde7fa5ea1de5c46f51ab9b837a178
            @Html.ValidationMessageFor(model => model.complejidad, "", new { @class = "text-danger" })
        </div>
    </div>

<<<<<<< HEAD
<<<<<<< HEAD
    <div class="form-group row offset-3 required">
        @Html.LabelFor(model => model.duracionEstimada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.duracionEstimada, new { htmlAttributes = new { @class = "form-control" } })
=======


=======
>>>>>>> 41870458fafde7fa5ea1de5c46f51ab9b837a178
    @*Duracion Estimada*@
    <div class="form-group row offset-3">
        @Html.LabelFor(model => model.duracionEstimada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.duracionEstimada, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.EditorFor(model => model.duracionEstimada)
<<<<<<< HEAD
>>>>>>> master
            @Html.ValidationMessageFor(model => model.duracionEstimada, "", new { @class = "text-danger" })
        </div>
    </div>

<<<<<<< HEAD
    <div class="form-group row offset-3">
        @Html.LabelFor(model => model.cedulaDesarrolladorFK, "Desarrollador Asignado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("cedulaDesarrolladorFK", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.cedulaDesarrolladorFK, "", new { @class = "text-danger" })
        </div>
    </div>

    @*Botón de Aceptar para guardar el requerimiento a crear*@
=======


=======

            @Html.ValidationMessageFor(model => model.duracionEstimada, "", new { @class = "text-danger" })
        </div>
    </div>

>>>>>>> 41870458fafde7fa5ea1de5c46f51ab9b837a178
    @*Desarrollador asignado al requerimiento*@
    <div class="form-group row offset-3">
        @Html.LabelFor(model => model.cedulaDesarrolladorFK, "Desarrollador", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("cedulaDesarrolladorFK", null, "--Seleccionar Desarrollador--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.cedulaDesarrolladorFK, "", new { @class = "text-danger" })
        </div>
    </div>



    @*Boton de aceptar*@
<<<<<<< HEAD
>>>>>>> master
=======
>>>>>>> 41870458fafde7fa5ea1de5c46f51ab9b837a178
    <div class="col text-center">
        <div class="form-group">
            <div class="col-md-auto" style="margin-top: 50px">
                <input type="image" src="~/images/success.svg" alt=”submit” name=”submit” width="50" height="50" style="float: unset" />
            </div>
        </div>
    </div>
<<<<<<< HEAD
<<<<<<< HEAD
</div>
}


=======

</div>
>>>>>>> master
=======


</div>

>>>>>>> 41870458fafde7fa5ea1de5c46f51ab9b837a178

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
